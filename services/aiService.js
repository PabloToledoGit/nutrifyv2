// services/recipeService.js
import OpenAI from 'openai';

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY
});

export const gerarTextoReceita = async (userData) => {
  const {
    peso,
    altura,
    idade,
    genero,
    objetivo,
    calorias,
    alimentosSelecionadosCafe,
    alimentosSelecionadosAlmoco,
    alimentosSelecionadosLanche,
    alimentosSelecionadosJanta,
    frequenciaTreino,
    planoNome,
    historicoSaude = "",
    incluiTreino = false,
    incluiDiaLixo = false
  } = userData;

  // üîí Corrigir poss√≠veis tipos incorretos de boolean vindo como string
  const treinoAtivo = String(incluiTreino).toLowerCase() === 'true' || incluiTreino === true;
  const lixoAtivo = String(incluiDiaLixo).toLowerCase() === 'true' || incluiDiaLixo === true;

  const prompt = `
**Aten√ß√£o: Priorize o hist√≥rico de sa√∫de do cliente em todas as decis√µes da dieta e treino. Nenhum alimento, suplemento ou atividade deve ser recomendada caso contrarie restri√ß√µes ou condi√ß√µes descritas.**

Hist√≥rico de sa√∫de informado pelo cliente:
${historicoSaude}

Utilize os dados abaixo para gerar um plano nutricional${treinoAtivo ? ' e de treino' : ''} personalizado em **HTML e CSS embutido**, com apar√™ncia visual semelhante ao plano "Dieta NutriInteligente" mas adaptado √† identidade moderna e limpa do Nutrify (tons de verde, blocos bem definidos, t√≠tulos claros e se√ß√µes bem divididas).

Informa√ß√µes do Usu√°rio:
- Nome do Plano: ${planoNome}
- Peso: ${peso} kg
- Altura: ${altura} cm
- Idade: ${idade} anos
- G√™nero: ${genero}
- Objetivo: ${objetivo}
- Calorias di√°rias: ${calorias}
- Frequ√™ncia de treino: ${frequenciaTreino}

Prefer√™ncias Alimentares:
- Caf√© da Manh√£: ${alimentosSelecionadosCafe}
- Almo√ßo: ${alimentosSelecionadosAlmoco}
- Lanche: ${alimentosSelecionadosLanche}
- Jantar: ${alimentosSelecionadosJanta}

üìå **Regras para o Plano:**
- Inclua um aviso de exclusividade e privacidade no topo
- Calcule e explique o **IMC** e a **ingest√£o ideal de √°gua**
- Divida as **refei√ß√µes** com:
  - T√≠tulo com hor√°rio e calorias da refei√ß√£o
  - 3 op√ß√µes de card√°pio com quantidades em gramas
  - Total de calorias por refei√ß√£o proporcional: Caf√© (20%), Lanche Manh√£ (15%), Almo√ßo (25%), Lanche Tarde (15%), Jantar (25%)
- Inclua **substitui√ß√µes** inteligentes para prote√≠na, carbo e gordura se poss√≠vel
- **Sugira h√°bitos saud√°veis e suplementos** com base no objetivo (respeitando o hist√≥rico de sa√∫de)

üìÖ ${treinoAtivo ? `**Inclua um plano de treino semanal** com:
- Divis√£o de treinos de Segunda a S√°bado
- T√≠tulos dos dias com foco (ex: ‚ÄúPeito e Tr√≠ceps‚Äù)
- Lista de exerc√≠cios com s√©ries, repeti√ß√µes e observa√ß√µes
` : ''}

${lixoAtivo ? `
üçï **Inclua uma se√ß√£o chamada "Dia do Lixo":**
- T√≠tulo: ‚ÄúDia do Lixo‚Äù
- Par√°grafo explicando o conceito de refei√ß√£o livre semanal
- Dicas pr√°ticas de como aproveitar sem sabotar os resultados
- Sugira o melhor momento da semana para aplicar a refei√ß√£o livre com base no objetivo
` : ''}

üí° Estrutura HTML:
- Use <h1>, <h2>, <h3> para os t√≠tulos
- <p> para explica√ß√µes e dados
- <ul><li> para listas de alimentos ou exerc√≠cios
- N√£o use <table>
- Inclua classes CSS inline com estilo leve (como se fosse um layout bonito, mas que ser√° renderizado direto no navegador ou convertido em PDF)
- O conte√∫do deve estar dentro de: <div class='receita'> ... </div>

‚ö†Ô∏è Importante:
- **N√£o inclua** <html>, <head>, <body>, nem markdown
- **N√£o use coment√°rios**
- O conte√∫do gerado deve ser colado diretamente na fun√ß√£o gerarHTMLReceita()

Visual clean, leve, bonito e organizado ‚Äî com cara de eBook, mas sem excesso de firula.
`;

  try {
    const completion = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [{ role: "user", content: prompt }],
      temperature: 0.7,
    });

    let resposta = completion.choices?.[0]?.message?.content || "";

    // üö´ Remover blocos ```html e ```
    resposta = resposta.replace(/```html|```/g, "").trim();

    if (!resposta) {
      console.error("Resposta vazia da OpenAI", completion);
      throw new Error("Erro: Resposta vazia da OpenAI.");
    }

    return resposta;
  } catch (error) {
    console.error("Erro na gera√ß√£o da receita:", error);
    throw new Error(`Erro na gera√ß√£o da receita: ${error.message}`);
  }
};
